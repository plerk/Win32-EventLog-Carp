NAME
    Win32::EventLog::Carp - for carping in the Windows NT Event Log

REQUIREMENTS
      Carp
      Win32::EventLog

  Installation

    Installation is pretty standard:

      perl Makefile.PL
      nmake
      nmake test
      nmake install

    If you have Module::Build installed, you can use the following:

      perl Build.PL
      perl Build
      perl Build test
      perl Build install

    Note that the tests for this module will post to the event log!

SYNOPSIS
      use Win32::EventLog::Carp;
      croak "We're outta here!";

      use Win32::EventLog::Carp qw(cluck);
      cluck "This is how we got here!";

DESCRIPTION
    `Win32::EventLog::Carp' traps warnings and fatal errors in Perl and
    reports these errors in the Windows NT Event Log. This is useful for
    scripts which run as services or through the scheduler, and for
    CGI/ISAPI scripts.

    The interface is similar to `Carp': the `carp', `croak' and `confess'
    functions are exported (with `cluck' being optional). You need only
    change references of "Carp" to "Win32::EventLog::Carp" to begin using
    this module.

    A more detailed description can be found in the module's POD docu-
    mentation.

REVISION HISTORY
    Changes since Win32::EventLog::Carp v1.35.  (Note: potential
    incompatabilities are marked with '*'.)

    1.36  Tue Jul 27 2004
 	- removed 'use warnings' (min Perl 5.006, not Perl 5.005)
	- removed Test::Exception from build_requires
	- added tests for event source registration
	- fixed event source registration
	- corrected tests (in line with Log::Dispatch::Win32EventLog)
	- event log is opened to $Source rather than "Application"

    A detailed revision history is in the Changes file included with
    this distribution.

AUTHOR
    Robert Rothenberg <rrwo at cpan.org>

LICENSE
    Copyright (c) 2000-2004 Robert Rothenberg. All rights reserved. This
    program is free software; you can redistribute it and/or modify it under
    the same terms as Perl itself.
